from bot.api_client import send_message, delete_message, get_updates
import time
from bot.api_client import InlineButton


def process_update_message(message: dict):
    try:
        message_text = message.get("text")
        chat_id = message.get("chat", {}).get("id")
        message_id = message.get("message_id")
        if not chat_id or not message_text:
            return None
        if message_text == "/start":
            text = "üëã –ü—Ä–∏–≤–µ—Ç!  –≠—Ç–æ Telegram-–±–æ—Ç –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ VPN. –í–∞–º –¥–æ—Å—Ç—É–ø–µ–Ω –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥ - 10 –¥–Ω–µ–π. –î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –≤ –º–µ–Ω—é –∫–Ω–æ–ø–∫—É ‚ö°Ô∏è–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è ‚Üì"
            reply_buttons = [
                ["‚ÑπÔ∏è –°—Ç–∞—Ç—É—Å", "‚ö°Ô∏è –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è"],
                ["üî• –ö—É–ø–∏—Ç—å", "‚ùì –ü–æ–º–æ—â—å"],
            ]
            send_message(
                chat_id=chat_id,
                text=text,
                reply_buttons=reply_buttons,
            )

        elif message_text == "‚ÑπÔ∏è –°—Ç–∞—Ç—É—Å":
            delete_message(chat_id, message_id)
            text = (
                "–î–æ—Å—Ç—É–ø: ‚òëÔ∏è <b>–ü—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥</b>\n"
                "‚îú –û—Å—Ç–∞–ª–æ—Å—å –¥–Ω–µ–π: 10\n"
                "‚îî –ê–∫—Ç–∏–≤–Ω–∞ –¥–æ: 20.06.2025 18:00"
            )
            send_message(chat_id=chat_id, text=text, parse_mode="HTML")

        elif message_text == "‚ö°Ô∏è –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è":
            delete_message(chat_id, message_id)
            text = (
                "–î–æ—Å—Ç—É–ø –∫ VPN –≤ 2 —à–∞–≥–∞:\n\n"
                "1Ô∏è‚É£ <b>–°–∫–∞—á–∞—Ç—å</b> ‚Äì –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è\n"
                "2Ô∏è‚É£ <b>–ü–æ–¥–∫–ª—é—á–∏—Ç—å</b> ‚Äì –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏\n\n"
                "<b>–ù–∞—Å—Ç—Ä–æ–∏—Ç—å VPN –≤—Ä—É—á–Ω—É—é:</b>\n"
                '‚Äì <a href="https://telegra.ph/Podklyuchenie-v2RayTun-Android-11-09">–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è Android ü§ñ</a>\n'
                '‚Äì <a href="https://telegra.ph/Podklyuchenie-v2raytun-iOS-11-09">–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è iOS/MacOS üçè</a>\n'
                '‚Äì <a href="https://telegra.ph/Nastrojka-VPN-PK-Windows-08-08">–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è Windows üñ•</a>\n\n'
                "<b>–°—Å—ã–ª–∫–∞ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è</b>\n"
                "<i>–¢–∞–ø–Ω–∏—Ç–µ —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞ ‚Üì</i>"
            )
            url_buttons = [
                [
                    InlineButton(
                        text="–°–∫–∞—á–∞—Ç—å Android ü§ñ",
                        url="https://play.google.com/store/apps/details?id=com.v2raytun.android&hl=ru&gl=US",
                    ),
                    InlineButton(
                        text="–ü–æ–¥–∫–ª—é—á–∏—Ç—å Android ü§ñ",
                        url="https://apps.artydev.ru/?url=v2raytun://import/https://u.mrzb.artydev.ru/c/2f18b7c0x3f20f8ac#MatadoraVPN",
                    ),
                ],
                [
                    InlineButton(
                        text="–°–∫–∞—á–∞—Ç—å iOS üçè",
                        url="https://apps.apple.com/ru/app/v2raytun/id6476628951",
                    ),
                    InlineButton(
                        text="–ü–æ–¥–∫–ª—é—á–∏—Ç—å iOS üçè",
                        url="https://apps.artydev.ru/?url=v2rayTun://import/https://u.mrzb.artydev.ru/c/2f18b7c0x3f20f8ac#MatadoraVPN",
                    ),
                ],
                [
                    InlineButton(
                        text="–°–∫–∞—á–∞—Ç—å Windows üñ•Ô∏è",
                        url="Hiddify-Windows-Setup-x64.exe",
                    ),
                    InlineButton(
                        text="–ü–æ–¥–∫–ª—é—á–∏—Ç—å Windows üñ•Ô∏è",
                        url="https://apps.artydev.ru/?url=hiddify://import/https://u.mrzb.artydev.ru/c/2f18b7c0x3f20f8ac",
                    ),
                ],
                [
                    InlineButton(
                        text="–ù–∞–∑–∞–¥",
                        url="go_back",
                    )
                ],
            ]
            send_message(
                chat_id=chat_id,
                text=text,
                parse_mode="HTML",
                inline_url_buttons=url_buttons,
            )

        elif message_text == "üî• –ö—É–ø–∏—Ç—å":
            delete_message(chat_id, message_id)
        elif message_text == "‚ùì –ü–æ–º–æ—â—å":
            delete_message(chat_id, message_id)
            text = "–ï—Å–ª–∏ —É –≤–∞—Å –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Ç–∞—Ç—É—Å –∏–∑ –±–æ—Ç–∞ –∏ —Å–∫—Ä–∏–Ω—à–æ—Ç –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–º –≤—ã –ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ VPN –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.–ù–∏–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–∏—Å—É ‚Üì"
            url_buttons = [
                [
                    InlineButton(
                        text="–ü–æ–¥–∫–ª—é—á–∏—Ç—å iOS/MacOS üçè",
                        url="https://telegra.ph/Podklyuchenie-v2raytun-iOS-11-09",
                    )
                ],
                [
                    InlineButton(
                        text="–ü–æ–¥–∫–ª—é—á–∏—Ç—å Android ü§ñ",
                        url="https://telegra.ph/Podklyuchenie-v2RayTun-Android-11-09",
                    )
                ],
                [
                    InlineButton(
                        text="–ü–æ–¥–∫–ª—é—á–∏—Ç—å Windows üñ•Ô∏è",
                        url="https://telegra.ph/Nastrojka-VPN-PK-Windows-08-08",
                    )
                ],
                [
                    InlineButton(
                        text="üÜò–ü–æ–¥–¥–µ—Ä–∂–∫–∞",
                        url="https://t.me/olegsklyarov",
                    )
                ],
                [
                    InlineButton(
                        text="–ù–∞–∑–∞–¥",
                        url="go_back",
                    )
                ],
            ]
            send_message(chat_id=chat_id, text=text, inline_url_buttons=url_buttons)
    except Exception as e:
        print(f"The error is {repr(e)}")


def process_update_callback(callback_query: dict):
    try:
        data = callback_query.get("data")
        message = callback_query.get("message", {})
        chat_id = message.get("chat", {}).get("id")
        message_id = message.get("message_id")

        if not chat_id or not data:
            return

        if data == "go_back":
            delete_message(chat_id, message_id)
    except Exception as e:
        print(f"The error is {repr(e)}")


next_update_id = 0
while True:
    try:  # ask Telegram for new updates
        response = get_updates(next_update_id)
        data = response.json()
        print(data)
        updates = data["result"]

        for update in updates:
            next_update_id = update["update_id"] + 1
            if "callback_query" in update:
                process_update_callback(update["callback_query"])
            elif "message" in update:
                process_update_message(update["message"])
            else:
                continue

    except Exception as e:
        print(f"The error is {e}")

    time.sleep(2)
